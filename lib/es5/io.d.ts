import { GameBoyAdvanceAudio } from './audio';
import { ARMCore } from './core';
import { GameBoyAdvance } from './gba';
import { GameBoyAdvanceKeypad } from './keypad';
import { GameBoyAdvanceSIO } from './sio';
import { GameBoyAdvanceVideo } from './video';
export declare class GameBoyAdvanceIO {
    cpu: ARMCore;
    audio: GameBoyAdvanceAudio;
    video: GameBoyAdvanceVideo;
    keypad: GameBoyAdvanceKeypad;
    sio: GameBoyAdvanceSIO;
    core: GameBoyAdvance;
    DISPCNT: number;
    GREENSWP: number;
    DISPSTAT: number;
    VCOUNT: number;
    BG0CNT: number;
    BG1CNT: number;
    BG2CNT: number;
    BG3CNT: number;
    BG0HOFS: number;
    BG0VOFS: number;
    BG1HOFS: number;
    BG1VOFS: number;
    BG2HOFS: number;
    BG2VOFS: number;
    BG3HOFS: number;
    BG3VOFS: number;
    BG2PA: number;
    BG2PB: number;
    BG2PC: number;
    BG2PD: number;
    BG2X_LO: number;
    BG2X_HI: number;
    BG2Y_LO: number;
    BG2Y_HI: number;
    BG3PA: number;
    BG3PB: number;
    BG3PC: number;
    BG3PD: number;
    BG3X_LO: number;
    BG3X_HI: number;
    BG3Y_LO: number;
    BG3Y_HI: number;
    WIN0H: number;
    WIN1H: number;
    WIN0V: number;
    WIN1V: number;
    WININ: number;
    WINOUT: number;
    MOSAIC: number;
    BLDCNT: number;
    BLDALPHA: number;
    BLDY: number;
    SOUND1CNT_LO: number;
    SOUND1CNT_HI: number;
    SOUND1CNT_X: number;
    SOUND2CNT_LO: number;
    SOUND2CNT_HI: number;
    SOUND3CNT_LO: number;
    SOUND3CNT_HI: number;
    SOUND3CNT_X: number;
    SOUND4CNT_LO: number;
    SOUND4CNT_HI: number;
    SOUNDCNT_LO: number;
    SOUNDCNT_HI: number;
    SOUNDCNT_X: number;
    SOUNDBIAS: number;
    WAVE_RAM0_LO: number;
    WAVE_RAM0_HI: number;
    WAVE_RAM1_LO: number;
    WAVE_RAM1_HI: number;
    WAVE_RAM2_LO: number;
    WAVE_RAM2_HI: number;
    WAVE_RAM3_LO: number;
    WAVE_RAM3_HI: number;
    FIFO_A_LO: number;
    FIFO_A_HI: number;
    FIFO_B_LO: number;
    FIFO_B_HI: number;
    DMA0SAD_LO: number;
    DMA0SAD_HI: number;
    DMA0DAD_LO: number;
    DMA0DAD_HI: number;
    DMA0CNT_LO: number;
    DMA0CNT_HI: number;
    DMA1SAD_LO: number;
    DMA1SAD_HI: number;
    DMA1DAD_LO: number;
    DMA1DAD_HI: number;
    DMA1CNT_LO: number;
    DMA1CNT_HI: number;
    DMA2SAD_LO: number;
    DMA2SAD_HI: number;
    DMA2DAD_LO: number;
    DMA2DAD_HI: number;
    DMA2CNT_LO: number;
    DMA2CNT_HI: number;
    DMA3SAD_LO: number;
    DMA3SAD_HI: number;
    DMA3DAD_LO: number;
    DMA3DAD_HI: number;
    DMA3CNT_LO: number;
    DMA3CNT_HI: number;
    TM0CNT_LO: number;
    TM0CNT_HI: number;
    TM1CNT_LO: number;
    TM1CNT_HI: number;
    TM2CNT_LO: number;
    TM2CNT_HI: number;
    TM3CNT_LO: number;
    TM3CNT_HI: number;
    SIODATA32_LO: number;
    SIOMULTI0: number;
    SIODATA32_HI: number;
    SIOMULTI1: number;
    SIOMULTI2: number;
    SIOMULTI3: number;
    SIOCNT: number;
    SIOMLT_SEND: number;
    SIODATA8: number;
    RCNT: number;
    JOYCNT: number;
    JOY_RECV: number;
    JOY_TRANS: number;
    JOYSTAT: number;
    KEYINPUT: number;
    KEYCNT: number;
    IE: number;
    IF: number;
    WAITCNT: number;
    IME: number;
    POSTFLG: number;
    HALTCNT: number;
    DEFAULT_DISPCNT: number;
    DEFAULT_SOUNDBIAS: number;
    DEFAULT_BGPA: number;
    DEFAULT_BGPD: number;
    DEFAULT_RCNT: number;
    registers: Uint16Array;
    value: any;
    constructor();
    clear(): void;
    freeze(): {
        registers: Blob;
    };
    defrost(frost: any): void;
    load8(offset: any): void;
    load16(offset: any): number;
    load32(offset: any): number;
    loadU8(offset: any): number;
    loadU16(offset: any): any;
    store8(offset: any, value: any): void;
    store16(offset: any, value: any): void;
    store32(offset: any, value: any): void;
    invalidatePage(address: any): void;
    STUB_REG(type: any, offset: any): void;
}
